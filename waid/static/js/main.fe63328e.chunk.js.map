{"version":3,"sources":["models/Record.js","components/CAction.js","uitls/Store.js","views/Index/index.js","views/Daily/index.js","views/App/index.js","uitls/serviceWorker.js","index.js"],"names":["Record","title","timeList","Object","classCallCheck","this","obj","startTime","relativeStr","checkTimeList","createAt","start","Date","now","filter","el","end","push","length","err","relativeTime","str","days","parseInt","hours","minutes","seconds","CAction","time","props","onDoubleTap","_this","react_default","a","createElement","className","onClick","handlerClick","children","React","Component","Local","createClass","key","value","tmp","localStorage","getItem","JSON","parse","stringify","setItem","Item","list_default","modal","vivible","Index","possibleConstructorReturn","getPrototypeOf","call","localKey","state","recordList","loadeRecordList","timerID","prevProps","prevState","storeRecordList","stop","index","_this2","record","started","forEach","setInterval","updateRelativeStr","setState","clearInterval","alert","get","records","set","_this3","renderHeader","map","item","CAction_CAction","extra","switchModal","icon_default","type","size","color","modal_default","visible","transparent","maskClosable","footer","text","onPress","addItem","onClose","input_item_default","clear","maxLength","onChange","handleInputChange","Daily","dateRecordObj","date","dayjs","format","recordTmp","dateList","sort","el0","el1","isAfter","dateItem","dateIndex","style","zIndex","Daily_Item","PopoverItem","popover_default","popover","App","opt","window","location","href","handlePopoverVisibleChange","react_router_dom","react_router","path","exact","component","mask","overlayClassName","overlay","align","overflow","adjustY","adjustX","offset","placement","onVisibleChange","onSelect","onPopoverSelect","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_views_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fe63328e.chunk.js","sourcesContent":["export default class Record {\n  constructor(title, timeList) {\n    let obj =\n      typeof title === 'object'\n        ? title\n        : {\n            title: title,\n            timeList: timeList\n          }\n    this.title = obj.title || ''\n    this.startTime = obj.startTime || 0\n    this.relativeStr = obj.relativeStr || ''\n    this.timeList = obj.timeList || []\n    this.checkTimeList()\n    this.createAt = obj.createAt || (this.timeList[0] || {}).start || Date.now()\n  }\n\n  checkTimeList() {\n    this.timeList = this.timeList.filter(el => {\n      return el.start !== 'undefined' && typeof el.end !== 'undefined'\n    })\n  }\n\n  start() {\n    if (!this.startTime) {\n      this.startTime = Date.now()\n      this.timeList.push({\n        start: this.startTime,\n        end: 0\n      })\n    }\n  }\n\n  stop() {\n    this.startTime = 0\n    try {\n      this.timeList[this.timeList.length - 1].end = Date.now()\n    } catch (err) {}\n  }\n\n  updateRelativeStr(start, end) {\n    start = start || this.startTime || Date.now()\n    end = end || Date.now()\n    let relativeTime = end - start\n    let str = ''\n    let dTime = 1 * 24 * 60 * 60 * 1000\n    let hTime = 1 * 60 * 60 * 1000\n    let mTime = 1 * 60 * 1000\n    let sTime = 1 * 1000\n    if (relativeTime >= dTime) {\n      let days = parseInt(relativeTime / dTime)\n      relativeTime = relativeTime - days * dTime\n      str += days + '天'\n    }\n    if (relativeTime >= hTime) {\n      let hours = parseInt(relativeTime / hTime)\n      relativeTime = relativeTime - hours * hTime\n      str += hours + '小时'\n    }\n    if (relativeTime >= mTime) {\n      let minutes = parseInt(relativeTime / mTime)\n      relativeTime = relativeTime - minutes * mTime\n      str += minutes + '分'\n    }\n    if (relativeTime >= sTime) {\n      let seconds = parseInt(relativeTime / sTime)\n      relativeTime = relativeTime - seconds * sTime\n      str += seconds + '秒'\n    }\n    if (!str) {\n      str = '0秒'\n    }\n    this.timeList[this.timeList.length - 1].end = end\n    this.relativeStr = str\n    // console.log(this)\n  }\n}\n","/**\n * 动作捕捉组件\n * @module /components/CAction\n * @example\n * // handlerDoubleTap\n * render() {\n *   return <CAction onDoubleTap={() => { this.handlerDoubleTap() }}>handlerDoubleTap</CAction>\n * }\n */\nimport React from 'react'\n\nexport default class CAction extends React.Component {\n  componentDidMount() {}\n\n  componentDidUpdate() {}\n\n  componentWillUnmount() {}\n\n  handlerClick() {\n    let now = Date.now()\n    if (now - this.time > 100 && now - this.time < 300) {\n      this.time = 0\n      this.props.onDoubleTap()\n    } else {\n      this.time = now\n    }\n  }\n\n  render() {\n    return (\n      <div\n        className=\"c-action\"\n        onClick={() => {\n          this.handlerClick()\n        }}\n      >\n        {this.props.children}\n      </div>\n    )\n  }\n}\n","export class Local {\n  static get(key) {\n    let tmp = localStorage.getItem(key)\n    try {\n      tmp = JSON.parse(tmp)\n    } catch (err) {}\n    return tmp\n  }\n\n  static set(key, value) {\n    try {\n      value = JSON.stringify(value)\n    } catch (err) {}\n    localStorage.setItem(key, value)\n  }\n}\n","/**\n * 首页\n * @module /views/Index/index\n */\n\nimport './index.scss'\nimport React from 'react'\nimport { List, Modal, InputItem, Icon } from 'antd-mobile'\nimport Record from '../../models/Record'\nimport CAction from '../../components/CAction'\nimport { Local } from '../../uitls/Store'\n\nconst Item = List.Item\n\nconst modal = {\n  vivible: false,\n  value: ''\n}\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props)\n    this.localKey = 'waid-index-record-list'\n    this.state = {\n      recordList: this.loadeRecordList(),\n      modal: modal\n    }\n    this.timerID = null\n  }\n\n  componentDidMount() {\n    this.start()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.storeRecordList()\n  }\n\n  componentWillUnmount() {\n    this.stop()\n  }\n\n  start(index) {\n    let recordList = this.state.recordList\n    let record = recordList[index] || new Record()\n    if (record.startTime) {\n      record.stop()\n    } else {\n      record.start()\n    }\n    let started = false\n    recordList.forEach(el => {\n      started = started || el.startTime\n    })\n    if (!started) {\n      this.stop()\n    } else if (!this.timerID) {\n      this.timerID = setInterval(() => {\n        recordList.forEach(el => {\n          if (el.startTime) el.updateRelativeStr()\n        })\n        this.setState({\n          recordList: recordList\n        })\n      }, 1000)\n    }\n  }\n\n  stop() {\n    clearInterval(this.timerID)\n    this.timerID = null\n    this.storeRecordList()\n  }\n\n  addItem() {\n    if (!modal.value) {\n      alert('请输入正确的标题')\n      return false\n    }\n    let recordList = this.state.recordList\n    recordList.push(new Record(modal.value))\n    this.setState({\n      recordList: recordList\n    })\n    return true\n  }\n\n  switchModal() {\n    modal.vivible = !modal.vivible\n    modal.value = modal.vivible ? '' : modal.value\n    this.setState({\n      modal: modal\n    })\n  }\n\n  handleInputChange(value) {\n    modal.value = value\n    this.setState({\n      modal: modal\n    })\n  }\n\n  loadeRecordList() {\n    let tmp = Local.get(this.localKey) || []\n    let records = []\n    tmp.forEach(el => {\n      records.push(new Record(el))\n    })\n    return records\n  }\n\n  storeRecordList() {\n    Local.set(this.localKey, this.state.recordList)\n  }\n\n  render() {\n    return (\n      <section className=\"index\">\n        {/* 事项列表 */}\n        <List\n          renderHeader={() => {\n            return <div className=\"index-list-header\">我在做些什么？!</div>\n          }}\n          className=\"index-list\"\n        >\n          {this.state.recordList.map((item, index) => (\n            <CAction onDoubleTap={() => this.start(index)} key={index}>\n              <Item extra={item.relativeStr}>\n                <div className=\"index-list-item-title\">{item.title}</div>\n              </Item>\n            </CAction>\n          ))}\n        </List>\n        {/* 添加按钮 */}\n        <div className=\"index-add float-btn\" onClick={() => this.switchModal()}>\n          <Icon type=\"cross\" size=\"lg\" color=\"#666\" />\n        </div>\n        {/* 添加弹窗 */}\n        <Modal\n          visible={this.state.modal.vivible}\n          transparent\n          maskClosable={true}\n          title=\"输入事项名称\"\n          footer={[\n            {\n              text: '确认',\n              onPress: () => {\n                if (this.addItem()) {\n                  this.switchModal()\n                }\n              }\n            }\n          ]}\n          onClose={() => {\n            this.switchModal()\n          }}\n        >\n          <div className=\"index-modal-input-box btn\">\n            <InputItem clear maxLength=\"30\" onChange={value => this.handleInputChange(value)} />\n          </div>\n        </Modal>\n      </section>\n    )\n  }\n}\n\nexport default Index\n","/**\n * 日常\n * @module /views/Daily/index\n */\n\nimport './index.scss'\nimport React from 'react'\nimport { List } from 'antd-mobile'\nimport Record from '../../models/Record'\nimport { Local } from '../../uitls/Store'\nimport dayjs from 'dayjs'\n\nconst Item = List.Item\n\nclass Daily extends React.Component {\n  constructor(props) {\n    super(props)\n    this.localKey = 'waid-index-record-list'\n    this.state = {\n      recordList: this.loadeRecordList()\n    }\n  }\n\n  loadeRecordList() {\n    let recordList = Local.get(this.localKey) || []\n    let dateRecordObj = {}\n    // 按天拆分每个事项记录的时间段记录\n    // 只要开始时间在今天，那么整个时间段都放到今天\n    recordList.forEach(el => {\n      let record = new Record(el)\n      record.timeList.forEach(el => {\n        let date = dayjs(el.start).format('YYYY-MM-DD')\n        dateRecordObj[date] = dateRecordObj[date] || []\n        let recordTmp = new Record(record)\n        recordTmp.timeList = [el]\n        recordTmp.startTime = el.start\n        recordTmp.updateRelativeStr(el.start, el.end)\n        dateRecordObj[date].push(recordTmp)\n      })\n    })\n\n    let dateList = []\n    for (let key in dateRecordObj) {\n      dateRecordObj[key].sort((el0, el1) => {\n        return el0.startTime - el1.startTime\n      })\n      dateList.push({\n        date: key,\n        records: dateRecordObj[key]\n      })\n    }\n    dateList.sort((el0, el1) => {\n      return dayjs(el0.date).isAfter(dayjs(el1.date)) ? -1 : 1\n    })\n    // console.log(dateList)\n    return dateList\n  }\n\n  render() {\n    return (\n      <section className=\"daily\">\n        {this.state.recordList.map((dateItem, dateIndex) => (\n          <div className=\"dailiy-list-box\" key={dateIndex}>\n            <div className=\"daily-list-header\" style={{ zIndex: dateIndex + 99 }}>\n              {dateItem.date}\n            </div>\n            <List className=\"daily-list\">\n              {dateItem.records.map((record, index) => (\n                <Item extra={record.relativeStr} key={index}>\n                  {record.title}\n                </Item>\n              ))}\n            </List>\n          </div>\n        ))}\n      </section>\n    )\n  }\n}\n\nexport default Daily\n","/**\n * 根组件\n * @module /views/App/index\n */\nimport './index.scss'\nimport React from 'react'\nimport Index from '../Index/index'\nimport Daily from '../Daily/index'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport { Popover, Icon } from 'antd-mobile'\n\nconst PopoverItem = Popover.Item\nconst popover = {\n  vivible: false,\n  value: ''\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      popover: popover\n    }\n  }\n\n  handlePopoverVisibleChange(vivible) {\n    popover.vivible = vivible\n    this.setState({\n      popover: popover\n    })\n  }\n\n  onPopoverSelect(opt) {\n    window.location.href = '#' + opt.props.value\n    this.handlePopoverVisibleChange(false)\n  }\n\n  render() {\n    return (\n      <section className=\"app\">\n        <Router>\n          <Route path=\"/\" exact component={Index} />\n          <Route path=\"/daily\" exact component={Daily} />\n          {/* 悬浮按钮 */}\n          <Popover\n            mask\n            overlayClassName=\"app-menu\"\n            visible={this.state.popover.vivible}\n            overlay={[\n              <PopoverItem value=\"/\">\n                <div className=\"app-menu-item\">我在做些什么？！</div>\n              </PopoverItem>,\n              <PopoverItem value=\"/daily\">\n                <div className=\"app-menu-item\">日常</div>\n              </PopoverItem>\n            ]}\n            align={{\n              overflow: { adjustY: 0, adjustX: 0 },\n              offset: [-10, 0]\n            }}\n            placement=\"left\"\n            onVisibleChange={visible => this.handlePopoverVisibleChange(visible)}\n            onSelect={opt => this.onPopoverSelect(opt)}\n          >\n            <div className=\"index-more float-btn\">\n              <Icon type=\"ellipsis\" size=\"lg\" color=\"#666\" />\n            </div>\n          </Popover>\n        </Router>\n      </section>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './views/App/'\nimport * as serviceWorker from './uitls/serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}